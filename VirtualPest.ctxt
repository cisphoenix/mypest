#BlueJ class context
comment0.params=initName\ initState
comment0.target=VirtualPest(String,\ int)
comment0.text=\ninitialize\ Virtual\ Pest\ name\ and\ state\n@param\ initName\ the\ name\ of\ the\ pest\n@param\ initState\ the\ initial\ state\ of\ the\ Pest\n\n
comment1.target=String\ getName()
comment1.text=\nget\ the\ name\ of\ the\ Pest\n@return\ the\ name\ of\ the\ Pest\n\n
comment2.target=int\ getIntState()
comment2.text=\nget\ the\ state\ of\ the\ Pest\ (as\ an\ int)\n@return\ the\ state\ of\ the\ Pest\n\n
comment3.target=String\ getFile()
comment3.text=\nreturns\ the\ file\ name\ for\ the\ Pest\ image.\ \ The\ file\ must\ be\ located\ \ \nin\ the\ MyPest\ project\ directory.\n@return\ the\ file\ name\ for\ the\ Pest\ image\n\n
comment4.target=int\ getNumActions()
comment4.text=\nreturns\ the\ number\ of\ actions\ that\ the\ Pest\ responds\ to\ (NOT\ including\nthe\ random\ action)\n@return\ the\ number\ of\ actions\n\n
comment5.target=String\ getState()
comment5.text=\nreturn\ the\ current\ state\ of\ the\ pest\ (as\ a\ String)\nif\ the\ current\ state\ is\ invalid,\ this\ method\ returns\ "error"\n@return\ the\ current\ state\ of\ the\ Pest\n\n
comment6.params=actionNum
comment6.target=String\ getAction(int)
comment6.text=\nreturns\ the\ actionNumth\ action\ that\ can\ be\ applied\ to\ the\ Pest\ \n(not\ including\ random)\nif\ actionNum\ does\ not\ correspond\ to\ a\ valid\ action,\ this\ method\ returns\nthe\ empty\ string\ ""\n@param\ actionNum\ the\ number\ of\ the\ requested\ action\n@return\ the\ name\ of\ the\ actionNumth\ action\n\n
comment7.target=String\ getPestSound()
comment7.text=\nreturn\ the\ sound\ that\ the\ pest\ makes\ in\ its\ current\ state\nif\ the\ state\ is\ invalid,\ this\ method\ returns\ the\ empty\ string\ ""\n@return\ the\ pest\ sound\ in\ the\ current\ state\n\n
comment8.target=String\ getPestAction()
comment8.text=\nreturn\ how\ the\ Pest\ acts\ in\ its\ current\ state\nif\ the\ state\ is\ invalid,\ this\ method\ returns\ the\ empty\ string\ ""\n@return\ the\ pest\ action\ in\ the\ current\ state\n\n
comment9.params=action
comment9.target=void\ doAction(int)
comment9.text=\nchange\ the\ state\ of\ the\ Pest\ in\ response\ to\ the\ specified\ owner\ action\ \n(and\ also\ the\ random\ action).\ \ If\ the\ action\ is\ not\ valid,\ the\ state\nof\ the\ pet\ does\ not\ change\n@param\ action\ the\ action\ that\ the\ Pest\ responds\ to\ \n\n
numComments=10
